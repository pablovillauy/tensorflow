# -*- coding: utf-8 -*-
"""Tensorflow 2.0 intro.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hUiwAUUHwCoEjfELIwcPSIz0aEKtU6NT

# **Tensorflow 2.0 Introduction**
The objective of this notebook is help you to learn what is and how to use Tensorflow.

Tensorflow is a ML tool, Open Source, Created by Google.
Last version. 2.0
Website. https://www.tensorflow.org/

What can you do with Tensorflow?
*   Image classification
*   Data Clustering
*   Regression
*   Reinforcement learning
*   Natural language processing

**Install Tensorflow**

To install Tensorflow use the pip command.

https://www.tensorflow.org/install
"""

# %tensorflow_version 1.x # in Google Colab, use this command if you need Tensorflow 1
# pip install tensorflow # if you need to install the library

import tensorflow as tf # import tensorflow module
print(tf.version) # print tensorflow version

"""**Tensor**

Tensor is one of the **main objects** in Tensorflow.
A tensor is a **generalization of vectors and matrices** to potentially higher dimensions. 
Internally, TensorFlow represents tensors as n-dimensional arrays of base datatypes.

A tf.Tensor has the following **properties**:
*   a **data type** (float32, int32, or string
*   a **shape** the number of dimensions it has and the size of each dimension

**Each element in the Tensor has the same data type**, and the data type is always known. 

The shape might be only partially known. 

Most operations produce tensors of fully-known shapes if the shapes of their inputs are also fully known, but in some cases it's only possible to find the shape of a tensor at graph execution time.


https://www.tensorflow.org/guide/tensor

**Rank**
The rank of a tf.Tensor object is its number of dimensions.
"""

# Rank 0: Scalar
# defining Rank 0 variables

mammal = tf.Variable("Elephant", tf.string)
ignition = tf.Variable(451, tf.int16)
floating = tf.Variable(3.14159265359, tf.float64)
its_complicated = tf.Variable(12.3 - 4.85j, tf.complex64)

print(type(mammal))
# <class 'tensorflow.python.ops.resource_variable_ops.ResourceVariable'>

"""**Shape of a tensor**"""

mammal.shape
# TensorShape([])

# Rank 1: Vector
mystr = tf.Variable(["Hello"], tf.string)
cool_numbers  = tf.Variable([3.14159, 2.71828], tf.float32)
first_primes = tf.Variable([2, 3, 5, 7, 11], tf.int32)
its_very_complicated = tf.Variable([12.3 - 4.85j, 7.5 - 6.23j], tf.complex64)

# Rank 2: Matrix (table)
mymat = tf.Variable([[7],[11]], tf.int16)
myxor = tf.Variable([[False, True],[True, False]], tf.bool)
linear_squares = tf.Variable([[4], [9], [16], [25]], tf.int32)
squarish_squares = tf.Variable([ [4, 9], [16, 25] ], tf.int32)
mymatC = tf.Variable([[7],[11]], tf.int32)

two_pairs=tf.Variable([['row 01', 'value 01'], ['row 02', 'value 02']], tf.string)
print('two_pairs: ' + two_pairs)
print('rank of two_pairs: ' + str(tf.rank(two_pairs)))
print('shape of two_pairs: ' + str(two_pairs.shape))

print(mymat.shape)
# TensorShape([Dimension(2), Dimension(1)])
mymat.shape

# Getting a tf.Tensor object's rank
rank_of_squares = tf.rank(squarish_squares)
print(rank_of_squares)

"""**Tensor Slices**
Since a tf.Tensor is an n-dimensional array of cells, to access a single cell in a tf.Tensor you need to specify n indices.

For a rank 0 tensor (a scalar), no indices are necessary, since it is already a single number.
"""

# access to a value for
# rank 0
print('rank 0')
print(mammal)

# rank 1
print('')
print('rank 1')

cool_numbers  = tf.Variable([3.14159, 2.71828], tf.float32)
print(cool_numbers[0])
print(cool_numbers[1])


# rank 2
print('')
print('rank 2')

squarish_squares = tf.Variable([ [4, 9], [16, 25], [36, 49] ], dtype=tf.int32)
print(squarish_squares.shape)

two_sqr = squarish_squares[0,0]
print(two_sqr)
# tf.Tensor(4, shape=(), dtype=int32)